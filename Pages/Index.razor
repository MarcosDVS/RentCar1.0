@page "/"
@using RentCar.Data.Models;

<PageTitle>RentCar</PageTitle>

<h3>Iniciar sesión</h3>

@if (!isLoggedIn)
{
    <form>
        <div class="form-group">
            <label for="username">Nombre de usuario</label>
            <input type="text" class="form-control" id="username" @bind="username">
        </div>
        <div class="form-group">
            <label for="password">Contraseña</label>
            <input type="password" class="form-control" id="password" @bind="password">
        </div>
        <button type="button" class="btn btn-primary" @onclick="Login">Iniciar sesión</button>
        <button type="button" class="btn btn-secondary" @onclick="CrearUsuario">Crear Usuario</button>
    </form>
}
else
{
    <p>Bienvenido, @currentUser.Name</p>
    <!-- Aquí puedes mostrar el resto de opciones del menú -->
}

@code {
    private string username;
    private string password;
    private bool isLoggedIn = false;
    private User currentUser;

    private async Task Login()
    {
        var result = await userServices.Login(username, password);
        if (result.Success)
        {
            isLoggedIn = true;
            currentUser = result.Data;
            // Almacenar la información del usuario en el almacenamiento local si lo deseas
            NavigationManager.NavigateTo("/rentalInvoices"); // Redirigir al usuario a la página principal después del inicio de sesión exitoso
        }
        else
        {
            // Mostrar un mensaje de error en caso de credenciales incorrectas
            // Puedes mostrar el mensaje en la página o utilizar una biblioteca de notificaciones como Blazored.Toast
        }
    }

    void CrearUsuario()
    {
        NavigationManager.NavigateTo("/createUser");
    }
}