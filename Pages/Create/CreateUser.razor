@page "/createUser"

<div class="container">
    <h3>@TituloForm</h3>
    <EditForm Model="request" OnValidSubmit="Send">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="mb-3 input-group">
            <label class="input-group-text">Nombre</label>
            <InputText class="form-control" @bind-Value="@request.Name"></InputText> 
        </div>
        <div class="mb-3 input-group">
            <label class="input-group-text">Usuario</label>
            <InputText class="form-control" @bind-Value="@request.Username"></InputText>
        </div>
        <div class="mb-3 input-group">
            <label class="input-group-text">Clave</label>
            <InputText class="form-control" @bind-Value="@request.Password"></InputText>
        </div>

        <div class="btn-group">
            <button type="submit" class="btn btn-outline-success">Guardar</button>
            <button @onclick="Cancelar" class="btn btn-outline-danger">Cancelar</button>
        </div>
    </EditForm>
    <br />
</div>

@code {
    public string TituloForm => request.Id == 0 ?
    "Agregar usuario" : "Modificar usuario";

    public bool ShowForm { get; set; } = false;
    public string Filtro { get; set; } = "";
    public List<UserResponse> Users { get; set; }
        = new List<UserResponse>();


    public UserRequest request { get; set; } = new UserRequest();

    void Cancelar()
    {
        NavigationManager.NavigateTo("/");
    }
    async Task CargarUsuarios()
    {
        var resultado =
        await userServices.Consultar(Filtro);
        if (resultado.Success)
        {
            Users = resultado.Data!;
        }
    }

    protected override async Task OnInitializedAsync()
    {
        await CargarUsuarios();
    }

    public async Task Send()
    {
        if (request.Id == 0)
        {
            //Debo registrar el contacto..
            var r = await userServices.Crear(request);
            if (r.Success)
            {
                Cancelar();
                await CargarUsuarios();
                StateHasChanged();
            }
        }
    }

    public void Seleccionar(int Id)
    {
        ShowForm = true;
        request = Users
        .Where(c => c.Id == Id)
        .Select(c => c.ToRequest())
        .FirstOrDefault() ?? new UserRequest();
    }


}


